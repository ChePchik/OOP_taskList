// import "./app/assets/style/style.scss";
// import { Preloader } from "./app/components/preloader/preloader";
// import template from "./app/components/template.html?raw";

// document.addEventListener("DOMContentLoaded", function () {
// 	// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑—á–∏–∫–∞
// 	document.getElementById("app").outerHTML = template;
// 	const preloader = new Preloader("preloaderContainer");

// 	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑—á–∏–∫
// 	preloader.visiblePreloader();
// 	setTimeout(() => {
// 		// –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑—á–∏–∫
// 		preloader.notVisiblePreloader();
// 		console.log(1);
// 	}, 3000);

// 	initializeComponents();
// });

// const initializeComponents = () => {
// };
import "./app/assets/style/style.scss";
import { Preloader } from "./app/components/preloader/preloader";
import { TaskManager } from "./app/components/task/TaskManager";
import template from "./app/components/template.html?raw";
import { Toaster } from "./app/components/toaster/toaster";
// import { ApiService } from "./app/services/ApiService";

class Main {
	constructor() {
		document.addEventListener("DOMContentLoaded", this.onDOMContentLoaded.bind(this));
	}

	onDOMContentLoaded() {
		// –í—Å—Ç–∞–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —ç–ª–µ–º–µ–Ω—Ç —Å ID 'app'
		document.getElementById("app").outerHTML = template;

		// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑—á–∏–∫–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ
		this.preloader = new Preloader("preloaderContainer");
		// this.preloader.visiblePreloader();
		// –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –∏ —Å–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑—á–∏–∫
		// setTimeout(() => {
		// 	this.preloader.notVisiblePreloader();
		// 	console.log(1);
		// }, 3000);

		// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
		this.initializeComponents();
	}

	initializeComponents() {
		// this.api = new ApiService("https://jsonplaceholder.typicode.com/");

		this.toaster = new Toaster();

		this.tasks = new TaskManager("task", {
			data: {
				// api: this.api,
				dataTest: "—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
			},
			events: {
				toast: (event) => {
					this.toaster.showToast(`–ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!`, 5000);
					// console.log("üöÄ ~ Main ~ initializeComponents ~ event:", event);
				},
			},
		});
		// –õ–æ–≥–∏–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	}
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
new Main();
